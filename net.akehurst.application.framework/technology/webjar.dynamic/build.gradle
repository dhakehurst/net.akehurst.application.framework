plugins {
  id "com.moowork.node" version "1.2.0"
//  id "de.richsource.gradle.plugins.typescript" version "1.8.0"
}

dependencies {
	implementation 'org.webjars.npm:requirejs:2.3.5'
	implementation 'org.webjars:require-css:0.1.10'

//	compile 'org.webjars:normalize.css:5.0.0'
	implementation 'org.webjars.bower:jquery:3.3.1'
	implementation 'org.webjars.bower:jquery-ui:1.12.1'

	implementation 'org.webjars.bower:sockjs-client:1.1.4'
	implementation 'org.webjars:cryptojs:3.1.2'

// --- Graph
 	implementation 'org.webjars.bower:graphlib:2.0.0'    // requires lodash
	implementation 'org.webjars.bower:lodash:3.10.1'
	implementation 'org.webjars.bower:dagre:0.7.4'       // requires lodash >= 3.10.0 (< 4), graphlib >= 1.0.5
	implementation ('org.webjars.bower:backbone:1.3.3') {
		transitive = false                        // transitive brings in underscore...we don't need it as we have lodash instead
	}
	implementation 'org.webjars.bower:cytoscape:3.2.5'
	implementation 'org.webjars.bower:cytoscape-dagre:2.1.0'

// --- Diagram
	implementation 'org.webjars.bower:jointjs:1.0.3'
	
// --- Chart
	implementation 'org.webjars:chartjs:2.7.0'
	
// --- Grid
 	implementation ('org.webjars.bower:gridstack:0.3.0' ){   // requires lodash >= 3.5.0, jQuery >= 3.1.0, jQuery.UI >= 1.12.0
		transitive = false                            // transitive causes version 4.17.4 of lodash to be resolved,
		                                              // we need version 3.x.x or the cystoscape-dagre plugin does not work
 	}
 	
// --- Editor
//	compile project(":${rootProject.name}.technology.webjar.orion")
	implementation 'org.webjars.npm:monaco-editor:0.10.0'
	//compile 'org.webjars:vscode-languageserver-node:2.5.0'

//	compile project(":${rootProject.name}.technology.webjar.languageclient")

}

jar {

	from ("${projectDir}/src/main/js", {
		into "META-INF/resources/webjars/dynamic/${version}"
		include "**/*.js"
	})
//	from (compileTypeScript.outputs, {
//		into "META-INF/resources/webjars/dynamic/${version}"
//	})
}

import com.moowork.gradle.node.NodeExtension
import com.moowork.gradle.node.variant.VariantBuilder

node {
  download = true
  nodeModulesDir = file("build")
}

String nodeExecutable() {
  NodeExtension nodeExt = NodeExtension.get(project)
  return new VariantBuilder(nodeExt).build().nodeExec
}

//compileTypeScript {
//  compilerExecutable "${nodeExecutable()} node_modules/typescript/lib/tsc.js"
//  dependsOn "npmInstall"
//}

//task compileTypeScript(type:NodeTask) {
///  dependsOn "npmInstall"
//  script = file("${projectDir}/node_modules/typescript/lib/tsc.js")
//  args = ["--project", "src/main/ts"]
//}